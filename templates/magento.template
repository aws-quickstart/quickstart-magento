{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy Magento 2.1 on AWS. QS(0013)",
    "Metadata": {
        "LICENSE": "Apache License Version 2.0",
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "AccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "WebServerInstanceType",
                        "WebServerMinSize",
                        "WebServerMaxSize",
                        "WebServerDesiredCapacity"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon RDS (Common) Configuration"
                    },
                    "Parameters": [
                        "DBEngineType",
                        "DBAllocatedStorage",
                        "DBAutoMinorVersionUpgrade",
                        "DBBackupRetentionPeriod",
                        "DBName",
                        "DBIops",
                        "DBMasterUsername",
                        "DBMasterUserPassword",
                        "DBMultiAZ",
                        "DBStorageType"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Aurora Specific Configuration"
                    },
                    "Parameters": [
                        "AuroraDBInstanceClass"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon RDS for MySQL Specific Configuration"
                    },
                    "Parameters": [
                        "MySQLDBInstanceClass"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon ElastiCache Configuration"
                    },
                    "Parameters": [
                        "ElastiCacheAutomaticFailover",
                        "ElastiCacheNodeType",
                        "ElastiCacheNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "Magento Configuration"
                    },
                    "Parameters": [
                        "DNSName",
                        "AdminFirstName",
                        "AdminLastName",
                        "AdminEmail",
                        "AdminUserName",
                        "AdminPassword",
                        "NotificationEmail",
                        "MagentoCurrency",
                        "MagentoLanguage",
                        "MagentoTimezone",
                        "MagentoReleaseMedia",
                        "SSLCertificateId"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AccessCIDR": {
                    "default": "Permitted IP range"
                },
                "AdminEmail": {
                    "default": "Administrator email"
                },
                "AdminFirstName": {
                    "default": "Administrator First Name"
                },
                "AdminLastName": {
                    "default": "Administrator Last Name"
                },
                "AdminPassword": {
                    "default": "Administrator Password"
                },
                "AdminUserName": {
                    "default": "Administrator User Name"
                },
                "DBEngineType": {
                    "default": "DB Engine"
                },
                "DBAllocatedStorage": {
                    "default": "DB Storage Size (in GiB)"
                },
                "DBAutoMinorVersionUpgrade": {
                    "default": "Automatic Upgrade To New MySQL Minor Versions"
                },
                "DBBackupRetentionPeriod": {
                    "default": "DB Backup Retention Period"
                },
                "AuroraDBInstanceClass": {
                    "default": "Amazon Aurora DB Instance Type"
                },
                "MySQLDBInstanceClass": {
                    "default": "Amazon RDS for MySQL DB Instance Type"
                },
                "DBIops": {
                    "default": "DB IOPS"
                },
                "DBMasterUserPassword": {
                    "default": "DB Master Password"
                },
                "DBMasterUsername": {
                    "default": "DB Master Username"
                },
                "DBMultiAZ": {
                    "default": "Enable Multi-AZ Deployment For DB Instance"
                },
                "DBName": {
                    "default": "DB Name"
                },
                "DBStorageType": {
                    "default": "DB Storage Type"
                },
                "DNSName": {
                    "default": "Public DNS Name"
                },
                "ElastiCacheAutomaticFailover": {
                    "default": "ElastiCache Automatic Failover"
                },
                "ElastiCacheNodeType": {
                    "default": "ElastiCache Node Type"
                },
                "ElastiCacheNodes": {
                    "default": "Number Of ElastiCache Nodes"
                },
                "KeyPairName": {
                    "default": "Key Name"
                },
                "MagentoCurrency": {
                    "default": "Magento Currency"
                },
                "MagentoLanguage": {
                    "default": "Magento Language"
                },
                "MagentoTimezone": {
                    "default": "Magento Timezone"
                },
                "MagentoReleaseMedia": {
                    "default": "S3 File Path To Download Magento"
                },
                "NotificationEmail": {
                    "default": "Email Address To Notify"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet 1 ID"
                },
                "PrivateSubnet2ID": {
                    "default": "Private Subnet 2 ID"
                },
                "PublicSubnet1ID": {
                    "default": "Public Subnet 1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Public Subnet 2 ID"
                },
                "QSS3BucketName": {
                    "default": "AWS Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "AWS Quick Start S3 Key Prefix"
                },
                "SSLCertificateId": {
                    "default": "SSL Certificate ARN"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "WebServerDesiredCapacity": {
                    "default": "Desired Number of Web Server Instances"
                },
                "WebServerInstanceType": {
                    "default": "Web Server Cluster Node Instance Type"
                },
                "WebServerMaxSize": {
                    "default": "Maximum Number of Web Server Instances"
                },
                "WebServerMinSize": {
                    "default": "Minimum Number of Web Server Instances"
                }
            }
        }
    },
    "Parameters": {
        "AccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Description": "The CIDR IP range that is permitted to access Magento instances. Note: a value of 0.0.0.0/0 will allow access from ANY ip address",
            "Type": "String"
        },
        "AdminEmail": {
            "Description": "Email of the Magento site administrator",
            "Type": "String"
        },
        "AdminFirstName": {
            "Description": "First Name of the Magento site administrator",
            "Type": "String"
        },
        "AdminLastName": {
            "Description": "Last Name of the Magento site administrator",
            "Type": "String"
        },
        "AdminPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "ConstraintDescription": "Must be at least 8 characters containing letters, numbers and symbols.",
            "Description": "Password of the Magento site administrator",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },
        "AdminUserName": {
            "Description": "Username of the Magento site administrator",
            "Type": "String"
        },
        "DBEngineType": {
            "Description": "Engine to use for Magento database",
            "Type": "String",
            "AllowedValues": [
                "MySQL",
                "Amazon Aurora"
            ],
            "Default": "Amazon Aurora"
        },
        "DBAllocatedStorage": {
            "ConstraintDescription": "Must be between 5 and 4096 GiB. If Iops specified, AllocatedStorage must be at least 100 GiB and with minimum Iops value of 1000",
            "Default": "16",
            "Description": "The size of the database in gigabytes (GiB)",
            "MaxValue": "4096",
            "MinValue": "5",
            "Type": "Number"
        },
        "DBAutoMinorVersionUpgrade": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version upgrade",
            "Type": "String"
        },
        "DBBackupRetentionPeriod": {
            "Default": "7",
            "Description": "The number of days for which automatic DB snapshots are retained.",
            "Type": "String"
        },
        "MySQLDBInstanceClass": {
            "AllowedValues": [
                "db.m1.large",
                "db.m1.medium",
                "db.m1.small",
                "db.m1.xlarge",
                "db.m2.2xlarge",
                "db.m2.2xlarge",
                "db.m2.xlarge",
                "db.m3.large",
                "db.m3.medium",
                "db.m3.xlarge",
                "db.m4.10xlarge",
                "db.m4.2xlarge",
                "db.m4.2xlarge",
                "db.m4.4xlarge",
                "db.m4.larg",
                "db.m4.xlarge",
                "db.r3.2xlarge",
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge",
                "db.r3.8xlarge",
                "db.r3.large",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.xlarge",
                "db.t1.micro",
                "db.t2.large",
                "db.t2.medium",
                "db.t2.micro",
                "db.t2.small"
            ],
            "ConstraintDescription": "Must select a valid database instance type.",
            "Default": "db.m4.2xlarge",
            "Description": "The name of the compute and memory capacity class of the Amazon RDS for MySQL DB instance, if selected.",
            "Type": "String"
        },
        "AuroraDBInstanceClass": {
            "AllowedValues": [
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge",
                "db.r3.large",
                "db.r3.xlarge",
                "db.t2.medium",
                "db.t2.small"
            ],
            "ConstraintDescription": "Must select a valid database instance type.",
            "Default": "db.r3.2xlarge",
            "Description": "The name of the compute and memory capacity class of the Amazon Aurora DB instance, if selected.",
            "Type": "String"
        },
        "DBIops": {
            "AllowedValues": [
                "1000",
                "2000",
                "3000",
                "4000",
                "5000",
                "6000",
                "7000",
                "8000",
                "9000",
                "10000"
            ],
            "ConstraintDescription": "1000 Iops min and increased in 1K increments. ",
            "Default": "1000",
            "Description": "DB Iops. Used only when io1 specified for the StorageType property",
            "Type": "Number"
        },
        "DBMasterUserPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "ConstraintDescription": "Must be at least 8 characters containing letters, numbers and symbols.",
            "Description": "The database admin account password. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },
        "DBMasterUsername": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Must begin with a letter and contain only alphanumeric characters.",
            "Default": "admin",
            "Description": "The database admin account username",
            "MaxLength": "16",
            "MinLength": "1",
            "NoEcho": "true",
            "Type": "String"
        },
        "DBMultiAZ": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Specifies if the database instance is a multiple Availability Zone deployment.",
            "Type": "String"
        },
        "DBName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Must begin with a letter and contain only alphanumeric characters.",
            "Default": "QuickstartMySQLDB",
            "Description": "Name of the initial database for the Amazon RDS for MySQL Instance.",
            "MaxLength": "64",
            "MinLength": "5",
            "Type": "String"
        },
        "DBStorageType": {
            "AllowedValues": [
                "standard",
                "gp2",
                "io1"
            ],
            "Default": "gp2",
            "Description": "The storage type associated with this database instance",
            "Type": "String"
        },
        "DNSName": {
            "Default": "",
            "Description": "(Optional) DNS Name for the magento site, you should create an alias for the ELB after the stack creation",
            "Type": "String"
        },
        "ElastiCacheAutomaticFailover": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Automatic Failover",
            "Type": "String"
        },
        "ElastiCacheNodeType": {
            "AllowedValues": [
                "cache.t2.micro",
                "cache.t2.small",
                "cache.t2.medium",
                "cache.m3.medium",
                "cache.m3.large",
                "cache.m3.xlarge",
                "cache.m3.2xlarge",
                "cache.m4.large",
                "cache.m4.xlarge",
                "cache.m4.2xlarge",
                "cache.m4.4xlarge",
                "cache.m4.10xlarge",
                "cache.c1.xlarge",
                "cache.r3.large",
                "cache.r3.xlarge",
                "cache.r3.2xlarge",
                "cache.r3.4xlarge",
                "cache.r3.8xlarge"
            ],
            "ConstraintDescription": "Must select a valid cache instance type.",
            "Default": "cache.m4.large",
            "Description": "The name of the compute and memory capacity class of the ElastiCache instance.",
            "Type": "String"
        },
        "ElastiCacheNodes": {
            "ConstraintDescription": "Must be between 2 and 5",
            "Default": "2",
            "Description": "Number of nodes in the ElastiCache cluster",
            "MaxValue": "5",
            "MinValue": "2",
            "Type": "Number"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "MagentoCurrency": {
            "Default": "USD",
            "Description": "Currency you’d like to use to display prices in the Magento store (Check here for the supported currency command http://devdocs.magento.com/guides/v2.0/install-gde/install/cli/install-cli-install.html)",
            "Type": "String"
        },
        "MagentoLanguage": {
            "Default": "en_US",
            "Description": "The language you’d like to use for the text that appears throughout the Magento store (Check here for the supported Language command http://devdocs.magento.com/guides/v2.0/install-gde/install/cli/install-cli-install.html)",
            "Type": "String"
        },
        "MagentoTimezone": {
            "Default": "America/Los_Angeles",
            "Description": "The time zone setting that specifies the primary market served by the Magento store",
            "Type": "String"
        },
        "MagentoReleaseMedia": {
            "Default": "",
            "Description": "Amazon S3 path to download magento .tar.gz file (https://s3.amazonaws.com/mybucket/Magento-CE-2_1_3_sample_data_tar_gz-2016-12-13-09-27-46.tar.gz)",
            "Type": "String"
        },
        "NotificationEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Email address to notify if there are any scaling operations",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "Private Subnet Id 1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "Private Subnet Id 2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "Public Subnet Id 1",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "Public Subnet Id 2",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the AWS Quick Start assets. AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "magento/latest",
            "Description": "S3 key prefix for the AWS Quick Start assets. AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "SSLCertificateId": {
            "Default": "",
            "Description": "(Optional) The ARN of the SSL certificate to use for the webserver. [optional]",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Description": "The CIDR IP range of VPC",
            "Type": "String"
        },
        "VPCID": {
            "Description": "VPC Id",
            "Type": "AWS::EC2::VPC::Id"
        },
        "WebServerDesiredCapacity": {
            "Default": "1",
            "Description": "Desired No of web server instances",
            "Type": "Number"
        },
        "WebServerInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Choose an instance type. m3.medium or larger recommended.",
            "Default": "m4.large",
            "Description": "Web server instance type",
            "Type": "String"
        },
        "WebServerMaxSize": {
            "Default": "1",
            "Description": "Maximum No of web server instances",
            "Type": "Number"
        },
        "WebServerMinSize": {
            "Default": "1",
            "Description": "Minimum No of web server instances",
            "Type": "Number"
        }
    },
    "Conditions": {
        "UseAurora": {
            "Fn::Equals": [
                {
                    "Ref": "DBEngineType"
                },
                "Amazon Aurora"
            ]
        }
    },
    "Resources": {
        "SecurityGroupStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/templates/securitygroups.template"
                },
                "Parameters": {
                    "AccessCIDR": {
                        "Ref": "AccessCIDR"
                    },
                    "VPC": {
                        "Ref": "VPCID"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "RDSStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/templates"
                            },
                            {
                                "Fn::If": [
                                    "UseAurora",
                                    "rdsaurora.template",
                                    "rdsmysql.template"
                                ]
                            }
                        ]
                    ]
                },
                "Parameters": {
                    "VPC": {
                        "Ref": "VPCID"
                    },
                    "RDSSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.MySQLRDSSecurityGroup"
                        ]
                    },
                    "Subnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "DBAllocatedStorage": {
                        "Ref": "DBAllocatedStorage"
                    },
                    "DBAutoMinorVersionUpgrade": {
                        "Ref": "DBAutoMinorVersionUpgrade"
                    },
                    "DBBackupRetentionPeriod": {
                        "Ref": "DBBackupRetentionPeriod"
                    },
                    "DBInstanceClass": {
                        "Fn::If": [
                            "UseAurora",
                            {
                                "Ref": "AuroraDBInstanceClass"
                            },
                            {
                                "Ref": "MySQLDBInstanceClass"
                            }
                        ]
                    },
                    "DBName": {
                        "Ref": "DBName"
                    },
                    "DBIops": {
                        "Ref": "DBIops"
                    },
                    "DBMasterUsername": {
                        "Ref": "DBMasterUsername"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "DBMultiAZ": {
                        "Ref": "DBMultiAZ"
                    },
                    "DBStorageType": {
                        "Ref": "DBStorageType"
                    }
                }
            }
        },
        "ElastiCache": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/templates/elasticache.template"
                },
                "Parameters": {
                    "VPC": {
                        "Ref": "VPCID"
                    },
                    "ElastiCacheSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.ElastiCacheSecurityGroup"
                        ]
                    },
                    "Subnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "ElastiCacheNodes": {
                        "Ref": "ElastiCacheNodes"
                    },
                    "ElastiCacheAutomaticFailover": {
                        "Ref": "ElastiCacheAutomaticFailover"
                    },
                    "ElastiCacheNodeType": {
                        "Ref": "ElastiCacheNodeType"
                    }
                }
            }
        },
        "WebServerASGStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/templates/webserver.template"
                },
                "Parameters": {
                    "KeyPair": {
                        "Ref": "KeyPairName"
                    },
                    "ELBSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.ELBSecurityGroup"
                        ]
                    },
                    "EFSSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.EFSSecurityGroup"
                        ]
                    },
                    "WebServerSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupStack",
                            "Outputs.WebServerSecurityGroup"
                        ]
                    },
                    "NotificationEmail": {
                        "Ref": "NotificationEmail"
                    },
                    "WebServerMinSize": {
                        "Ref": "WebServerMinSize"
                    },
                    "WebServerMaxSize": {
                        "Ref": "WebServerMaxSize"
                    },
                    "WebServerInstanceType": {
                        "Ref": "WebServerInstanceType"
                    },
                    "WebServerDesiredCapacity": {
                        "Ref": "WebServerDesiredCapacity"
                    },
                    "WebServerSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "ElasticLoadBalancerSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PublicSubnet1ID"
                                },
                                {
                                    "Ref": "PublicSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "VPCID": {
                        "Ref": "VPCID"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "MagentoCurrency": {
                        "Ref": "MagentoCurrency"
                    },
                    "MagentoLanguage": {
                        "Ref": "MagentoLanguage"
                    },
                    "MagentoTimezone": {
                        "Ref": "MagentoTimezone"
                    },
                    "MagentoReleaseMedia": {
                        "Ref": "MagentoReleaseMedia"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "DBMasterUsername": {
                        "Ref": "DBMasterUsername"
                    },
                    "DBName": {
                        "Ref": "DBName"
                    },
                    "MySQLEndPointAddress": {
                        "Fn::GetAtt": [
                            "RDSStack",
                            "Outputs.RDSEndPointAddress"
                        ]
                    },
                    "ElastiCacheEndpoint": {
                        "Fn::GetAtt": [
                            "ElastiCache",
                            "Outputs.ElastiCacheEndpoint"
                        ]
                    },
                    "DNSName": {
                        "Ref": "DNSName"
                    },
                    "AdminFirstName": {
                        "Ref": "AdminFirstName"
                    },
                    "AdminLastName": {
                        "Ref": "AdminLastName"
                    },
                    "AdminEmail": {
                        "Ref": "AdminEmail"
                    },
                    "AdminUserName": {
                        "Ref": "AdminUserName"
                    },
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "SSLCertificateId": {
                        "Ref": "SSLCertificateId"
                    }
                }
            }
        }
    },
    "Outputs": {
        "URL": {
            "Description": "The URL of the website",
            "Value": {
                "Fn::GetAtt": [
                    "WebServerASGStack",
                    "Outputs.URL"
                ]
            }
        },
        "AdminURL": {
            "Description": "Admin path",
            "Value": {
                "Fn::GetAtt": [
                    "WebServerASGStack",
                    "Outputs.AdminURL"
                ]
            }
        },
        "ELBURL": {
            "Description": "The URL of the ELB, you should create a CNAME or alias to this name if you specified a DNS name",
            "Value": {
                "Fn::GetAtt": [
                    "WebServerASGStack",
                    "Outputs.ELBURL"
                ]
            }
        }
    }
}